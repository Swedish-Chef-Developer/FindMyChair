@using FindMyChair.Models.Meetings;
@using System;
@using System.Globalization;
@using FindMyChair.Types;
@using FindMyChair.Web.ViewModels;
@using FindMyChair.Utilities;
@using Mapsui;
@model NearMeViewModel
@if (null != Model)
{
	if (null != Model.UpcomingMeetingsList && Model.UpcomingMeetingsList.Any())
	{
		Html.RenderPartial("~/Views/Home/Partials/_MeetingList.cshtml", Model.UpcomingMeetingsList);
	}
	if (!string.IsNullOrWhiteSpace(Model.BingApiKey) && null != Model.LocationLists)
	{
		<div id="map" style="position:relative; height:600px;"></div>
		<script type='text/javascript'>

            function loadMapScenario() {
            var map = new Microsoft.Maps.Map(document.getElementById('map'), {
                credentials: "@Model.BingApiKey",
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 14
            });

            // Create the infobox for the pushpin
            var infobox = null;
            //declare addMarker function
            function addMarker(latitude, longitude, title, description, pid)
            {
                var marker = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(latitude, longitude), { color: 'green' });
                infobox = new Microsoft.Maps.Infobox(marker.getLocation(), {
                    visible : false
                });
                marker.metadata = {
                    id: pid,
                    title: title,
                    description: description
                };
                Microsoft.Maps.Events.addHandler(marker, 'mouseout', hideInfobox);
                Microsoft.Maps.Events.addHandler(marker, 'mouseover', showInfobox);
                infobox.setMap(map);
                map.entities.push(marker);
                marker.setOptions({ enableHoverStyle: true });
            };

            function showInfobox(e) {
                if (e.target.metadata) {
                    infobox.setOptions({
                        location: e.target.getLocation(),
                        title: e.target.metadata.title,
                        description: e.target.metadata.description,
                        visible: true
                    });
                }
            }

            function hideInfobox(e) {
                infobox.setOptions({ visible: false });
            }

            //add markers to map
            @if (Model.LocationLists.LocationList != null)
            {
                foreach (var item in Model.LocationLists.LocationList)
                {
                    @:addMarker(@item.Latitude, @item.Longitude, '@Html.Raw(item.Title)', '@Html.Raw(item.Description)', @item.LocationId);
                }
            }
        }
	</script>
	<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?branch=release&callback=loadMapScenario' async defer></script>
	}
}